# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# backend connection
GET           /socket/developer                                                      controllers.ScalaRoutes.getSocketDeveloper
GET           /socket/generator/:id                                                  controllers.ScalaRoutes.getSocketGenerator(id: java.util.UUID)
GET           /socket/user/:model                                                    controllers.ScalaRoutes.getSocketUser(model: java.util.UUID)

# Home page
GET           /                                                                      controllers.ScalaRoutes.getIndex
GET           /user                                                                  controllers.ScalaRoutes.getUser
GET           /signOut                                                               controllers.ScalaRoutes.getSignout

GET           /signUp                                                                controllers.ScalaRoutes.getSignUp
POST          /signUp                                                                controllers.ScalaRoutes.postSignUp

GET           /signIn                                                                controllers.ScalaRoutes.getSignIn
POST          /signIn                                                                controllers.ScalaRoutes.postSignIn

GET           /password/forgot                                                       controllers.ScalaRoutes.getPasswordForgot
POST          /password/forgot                                                       controllers.ScalaRoutes.postPasswordForgot
GET           /password/reset/:token                                                 controllers.ScalaRoutes.getPasswordReset(token: java.util.UUID)
POST          /password/reset/:token                                                 controllers.ScalaRoutes.postPasswordReset(token: java.util.UUID)
GET           /password/change                                                       controllers.ScalaRoutes.getPasswordChange
POST          /password/change                                                       controllers.ScalaRoutes.postPasswordChange

GET           /account/email/:email                                                  controllers.ScalaRoutes.getAccountEmail(email: String)
GET           /account/activate/:token                                               controllers.ScalaRoutes.getAccountActivate(token: java.util.UUID)


### Webpage
GET           /webpage                                                               controllers.ScalaRoutes.getWebpage
GET           /overview                                                              controllers.ScalaRoutes.getOverviewNoArgs
GET           /overview/:id                                                          controllers.ScalaRoutes.getOverview(id: java.util.UUID)


# metamodel editor
GET           /metamodel/editor/:metaModelId                                         controllers.ScalaRoutes.getMetamodelEditor(metaModelId: java.util.UUID)
GET           /metamodel/socket/:metaModelId                                         controllers.ScalaRoutes.getMetamodelSocket(metaModelId: java.util.UUID)

### model editor
GET           /model/editor/:modelId                                                 controllers.ScalaRoutes.getModelEditor(modelId: java.util.UUID)

### vr
GET           /model/vreditor/:modelId                                               controllers.ScalaRoutes.getModelVrEditor(modelId: java.util.UUID)

# temporary
GET           /generator/:metaModelId                                                controllers.ScalaRoutes.getGenerate(metaModelId: java.util.UUID)

### MetaModel REST API
GET           /rest/v1/meta-models                                                            controllers.ScalaRoutes.getMetamodelsNoArgs
POST          /rest/v1/meta-models                                                            controllers.ScalaRoutes.postMetamodels
PUT           /rest/v1/meta-models/:metaModelId                                               controllers.ScalaRoutes.putMetamodels(metaModelId: java.util.UUID)
GET           /rest/v1/meta-models/:metaModelId                                               controllers.ScalaRoutes.getMetamodels(metaModelId: java.util.UUID)
DELETE        /rest/v1/meta-models/:metaModelId                                               controllers.ScalaRoutes.deleteMetamodels(metaModelId: java.util.UUID)
GET           /rest/v1/meta-models/:metaModelId/definition                                    controllers.ScalaRoutes.getMetamodelsDefinition(metaModelId: java.util.UUID)
PUT           /rest/v1/meta-models/:metaModelId/definition                                    controllers.ScalaRoutes.putMetamodelsDefinition(metaModelId: java.util.UUID)
GET           /rest/v1/meta-models/:metaModelId/definition/mclasses                           controllers.ScalaRoutes.getMetamodelsDefinitionMclassesNoArgs(metaModelId: java.util.UUID)
GET           /rest/v1/meta-models/:metaModelId/definition/mreferences                        controllers.ScalaRoutes.getMetamodelsDefinitionMreferencesNoArgs(metaModelId: java.util.UUID)
GET           /rest/v1/meta-models/:metaModelId/definition/mclasses/:mClassName               controllers.ScalaRoutes.getMetamodelsDefinitionMclasses(metaModelId: java.util.UUID, mClassName: String)
GET           /rest/v1/meta-models/:metaModelId/definition/mreferences/:mReferenceName        controllers.ScalaRoutes.getMetamodelsDefinitionMReferences(metaModelId: java.util.UUID, mReferenceName: String)
GET           /rest/v1/meta-models/:metaModelId/shape                                         controllers.ScalaRoutes.getMetamodelsShape(metaModelId: java.util.UUID)
PUT           /rest/v1/meta-models/:metaModelId/shape                                         controllers.ScalaRoutes.putMetamodelsShape(metaModelId: java.util.UUID)
GET           /rest/v1/meta-models/:metaModelId/style                                         controllers.ScalaRoutes.getMetamodelsStyle(metaModelId: java.util.UUID)
PUT           /rest/v1/meta-models/:metaModelId/style                                         controllers.ScalaRoutes.putMetamodelsStyle(metaModelId: java.util.UUID)
GET           /rest/v1/meta-models/:metaModelId/diagram                                       controllers.ScalaRoutes.getMetamodelsDiagram(metaModelId: java.util.UUID)
PUT           /rest/v1/meta-models/:metaModelId/diagram                                       controllers.ScalaRoutes.putMetamodelsDiagram(metaModelId: java.util.UUID)
GET           /rest/v1/meta-models/:metaModelId/validator                                     controllers.ScalaRoutes.getMetamodelsValidator(metaModelId: java.util.UUID, generate: Option[Boolean])
HEAD          /metamodels/:metaModelId/validator                                     controllers.ScalaRoutes.headMetaModelsValidator(metaModelId: java.util.UUID, generate: Option[Boolean])

### Model REST API
GET           /rest/v1/models                                                                controllers.ScalaRoutes.getModelsNoArgs
POST          /rest/v1/models                                                                controllers.ScalaRoutes.postModels
PUT           /rest/v1/models/:modelId                                                       controllers.ScalaRoutes.putModels(modelId: java.util.UUID)
GET           /rest/v1/models/:modelId                                                       controllers.ScalaRoutes.getModels(modelId: java.util.UUID)
GET           /rest/v1/models/:modelId/definition                                            controllers.ScalaRoutes.getModelsDefinition(modelId: java.util.UUID)
PUT           /rest/v1/models/:modelId/definition                                            controllers.ScalaRoutes.putModelsDefinition(modelId: java.util.UUID)
GET           /rest/v1/models/:modelId/definition/nodes                                      controllers.ScalaRoutes.getModelsDefinitionNodesNoArgs(modelId: java.util.UUID)
GET           /rest/v1/models/:modelId/definition/nodes/:nodeName                            controllers.ScalaRoutes.getModelsDefinitionNodes(modelId: java.util.UUID, nodeName: String)
GET           /rest/v1/models/:modelId/definition/edges                                      controllers.ScalaRoutes.getModelDefinitionEdgesNoArgs(modelId: java.util.UUID)
GET           /rest/v1/models/:modelId/definition/edges/:edgeName                            controllers.ScalaRoutes.getModelDefinitionEdges(modelId: java.util.UUID, edgeName: String)
DELETE        /rest/v1/models/:modelId                                                       controllers.ScalaRoutes.deleteModels(modelId: java.util.UUID)
GET           /rest/v1/models/:modelId/validation                                            controllers.ScalaRoutes.getModelsValidation(modelId: java.util.UUID)

### Code Editor
GET           /codeEditor/editor/:metaModelId/:dslType                               controllers.ScalaRoutes.getCodeEditor(metaModelId: java.util.UUID, dslType: String)
GET           /codeEditor/socket/:metaModelId/:dslType                               controllers.ScalaRoutes.getCodeEditorSocket(metaModelId: java.util.UUID, dslType: String)

# Map static resources from the /public folder to the /assets URL path
GET           /assets/*file                                                          controllers.ScalaRoutes.getAssets(file)
GET           /webjars/*file                                                         controllers.ScalaRoutes.getWebjars(file)
GET           /model_specific/:id/*file                                              controllers.ScalaRoutes.getMode_specific(id: java.util.UUID, file: String)

GET           /app                                                                   controllers.ScalaRoutes.getWebApp(page = "")
GET           /app/*path                                                             controllers.ScalaRoutes.getWebApp(path)

