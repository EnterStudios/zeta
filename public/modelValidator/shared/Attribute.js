// Generated by CoffeeScript 1.9.1
(function() {
  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  window.Attribute = (function(superClass) {
    var Constants;

    extend(Attribute, superClass);

    Constants = window.Constants;

    function Attribute(attributeObj) {
      Attribute.__super__.constructor.call(this, attributeObj[Constants.attr.LOWER_BOUND], attributeObj[Constants.attr.UPPER_BOUND]);
      this.name = attributeObj[Constants.attr.NAME] || '';
      this.uniqueGlobal = attributeObj[Constants.attr.UNIQUE_GLOBAL] || false;
      this.uniqueLocal = attributeObj[Constants.attr.UNIQUE_LOCAL] || false;
      this["default"] = attributeObj[Constants.attr.DEFAULT] || '';
      this.singleAssignment = attributeObj[Constants.attr.SINGLE_ASSIGNMENT] || false;
      this.expression = attributeObj[Constants.attr.EXPRESSION] || '';
      this.type = attributeObj[Constants.attr.TYPE] || '';
      this.ordered = attributeObj[Constants.attr.ORDERED] || false;
      this.transient = attributeObj[Constants.attr.TRANSIENT] || false;
      this.constant = attributeObj[Constants.attr.CONSTANT] || false;
    }

    Attribute.prototype.getName = function() {
      return this.name;
    };

    Attribute.prototype.isUniqueGlobal = function() {
      return this.uniqueGlobal;
    };

    Attribute.prototype.isUniqueLocal = function() {
      return this.uniqueLocal;
    };

    Attribute.prototype.getDefault = function() {
      return this["default"];
    };

    Attribute.prototype.isSingleAssignment = function() {
      return this.singleAssignment;
    };

    Attribute.prototype.getExpression = function() {
      return this.expression;
    };

    Attribute.prototype.getType = function() {
      return this.type;
    };

    Attribute.prototype.isOrdered = function() {
      return this.ordered;
    };

    Attribute.prototype.isTransient = function() {
      return this.transient;
    };

    Attribute.prototype.isConstant = function() {
      return this.constant;
    };

    return Attribute;

  })(window.Bounds);

}).call(this);

//# sourceMappingURL=Attribute.js.map
