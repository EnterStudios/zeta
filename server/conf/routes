# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~


### Webpage
GET         /                                                   @controllers.Webpage.index

### Metamodel
GET         /newMetaModel                                       @controllers.MetaModelController.newMetaModel
GET         /metaModelEditor/:metaModelUuid                     @controllers.MetaModelController.metaModelEditor(metaModelUuid: String)
POST        /saveMetaModel                                      @controllers.MetaModelController.saveMetaModel
GET         /metaModelCodeEditor/:metaModelUuid/:dslType        @controllers.MetaModelController.codeEditor(metaModelUuid: String, dslType: String)
GET         /metaModelValidator                                 @controllers.MetaModelController.modelValidator
GET         /deleteMetaModel/:uuid                              @controllers.MetaModelController.deleteMetaModel(uuid: String)

### MetaModel REST API
GET         /metamodels/:metamodelId                            @controllers.MetaModelRESTAPI.getMetaModel(metamodelId: String)
# POST
# PUT
# DELETE
GET         /metamodels/:metamodelId/mclasses                   @controllers.MetaModelRESTAPI.getmClasses(metamodelId: String)
# POST
# PUT
# DELETE
GET         /metamodels/mclasses/:mclassId                      @controllers.MetaModelRESTAPI.getmClass(mclassId: String)
# POST
# PUT
# DELETE
GET         /metamodels/:metamodelId/mrefs                      @controllers.MetaModelRESTAPI.getmRefs(metamodelId: String)
# POST
# PUT
# DELETE
GET         /metamodels/mrefs/:mrefId                           @controllers.MetaModelRESTAPI.getmRef(mrefId: String)
# POST
# PUT
# DELETE


### Model
GET         /newgraph/:graphType                                @controllers.Webpage.newGraph(graphType: String)
GET         /editor/:graphType/:uuid                            @controllers.Webpage.editor(graphType: String, uuid: String)
GET         /diagrams                                           @controllers.Webpage.diagrams(uuid: String = null)
GET         /diagrams/:uuid                                     @controllers.Webpage.diagrams(uuid: String)

### Model REST API
GET         /models/:modelId                                    @controllers.ModelRESTAPI.getModel(modelId: String)
# POST
# PUT
# DELETE
GET         /models/:modelId/nodes                              @controllers.ModelRESTAPI.getNodes(modelId: String)
# POST
# PUT
# DELETE
GET         /models/nodes/:nodeId                               @controllers.ModelRESTAPI.getNode(nodeId: String)
# POST
# PUT
# DELETE
GET         /models/:modelId/edges                              @controllers.ModelRESTAPI.getEdges(modelId: String)
# POST
# PUT
# DELETE
GET         /models/edges/:edgeId                               @controllers.ModelRESTAPI.getEdge(edgeId: String)
# POST
# PUT
# DELETE

### Common
GET         /socket/:metaModelUuid/:dslType                     @controllers.Webpage.codeSocket(metaModelUuid: String, dslType: String)
GET         /diagramsocket/:graphType/:instanceId               @controllers.Webpage.diagramSocket(instanceId:String, graphType:String)

### Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                                       controllers.Assets.at(path="/public", file)

### oauth2 related routes
POST        /oauth/accessToken                                  @controllers.OAuthController.accessToken
# temp. route for testing purposes
GET         /oauth/info                                         @controllers.OAuthController.info
GET         /oauth/setup                                        @controllers.OAuthController.setup

### include securesocial routes
->          /auth                                               securesocial.Routes