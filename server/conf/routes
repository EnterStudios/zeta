### Webpage
GET         /                                                 @controllers.webpage.Webpage.index
GET         /overview                                         @controllers.webpage.Webpage.diagramsOverview(uuid: String = null)
GET         /overview/:uuid                                   @controllers.webpage.Webpage.diagramsOverview(uuid: String)


### Metamodel
GET         /metamodel/new                                    @controllers.MetaModelController.newMetaModel
GET         /metamodel/editor/:metaModelUuid                  @controllers.MetaModelController.metaModelEditor(metaModelUuid: String)
POST        /metamodel/save                                   @controllers.MetaModelController.saveMetaModel
GET         /metamodel/delete/:metaModelUuid                  @controllers.MetaModelController.deleteMetaModel(metaModelUuid: String)
GET         /metamodel/socket/:metaModelUuid                  @controllers.MetaModelController.metaModelSocket(metaModelUuid: String)


### MetaModel REST API
GET         /metamodels/:metamodelId                          @controllers.restApi.MetaModelRestApi.getMetaModel(metamodelId: String)
GET         /metamodels/:metamodelId/mclasses                 @controllers.restApi.MetaModelRestApi.getmClasses(metamodelId: String)
GET         /metamodels/mclasses/:mclassId                    @controllers.restApi.MetaModelRestApi.getmClass(mclassId: String)
GET         /metamodels/:metamodelId/mrefs                    @controllers.restApi.MetaModelRestApi.getmRefs(metamodelId: String)
GET         /metamodels/mrefs/:mrefId                         @controllers.restApi.MetaModelRestApi.getmRef(mrefId: String)


### Model
GET         /model/new/:metaModelUuid                         @controllers.ModelController.newModel(metaModelUuid: String)
GET         /model/editor/:metaModelUuid/:modelUuid           @controllers.ModelController.modelEditor(metaModelUuid: String, modelUuid: String)
GET         /model/socket/:graphType/:instanceId              @controllers.ModelController.modelSocket(instanceId:String, graphType:String)
GET         /model/validator                                  @controllers.ModelController.modelValidator


### Model REST API
GET         /models/:modelId                                  @controllers.restApi.ModelRestApi.getModel(modelId: String)
GET         /models/:modelId/nodes                            @controllers.restApi.ModelRestApi.getNodes(modelId: String)
GET         /models/:modelId/nodes/:nodeId                    @controllers.restApi.ModelRestApi.getNode(modelId: String, nodeId: String)
GET         /models/:modelId/edges                            @controllers.restApi.ModelRestApi.getEdges(modelId: String)
GET         /models/:modelId/edges/:edgeId                    @controllers.restApi.ModelRestApi.getEdge(modelId: String, edgeId: String)


### Code Editor
GET         /codeeditor/editor/:metaModelUuid/:dslType        @controllers.CodeEditorController.codeEditor(metaModelUuid: String, dslType: String)
GET         /codeeditor/socket/:metaModelUuid/:dslType        @controllers.CodeEditorController.codeSocket(metaModelUuid: String, dslType: String)


### oAuth 2
POST        /oauth/accessToken                                @controllers.oAuth.OAuthController.accessToken
POST        /oauth/accessTokenLocal                           @controllers.oAuth.OAuthLocalController.accessToken
# temp. route for testing purposes
GET         /oauth/info                                       @controllers.oAuth.OAuthController.info
GET         /oauth/setup                                      @controllers.oAuth.OAuthController.setup


### Account management
GET         /account/overview                                 @controllers.AccountController.overview
GET         /account/edit                                     @controllers.AccountController.edit


### Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                                     controllers.Assets.at(path="/public", file)


### include securesocial routes
->          /auth                                             securesocial.Routes

